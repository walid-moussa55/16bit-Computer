// 78
struct Unicode_t{unsigned int unicode[8];};
Unicode_t getUnicode(const unsigned char& code){
	if(code == 0x00) return {{MI|PCO,RO|II|PCE,0					,0				,0			,0			,0			,0			}}; // nop
	if(code == 0x01) return {{MI|PCO,RO|II|PCE,MI|PCO				,RO|PCE			,MI			,RO|AI		,0			,0			}}; // lda  
	if(code == 0x02) return {{MI|PCO,RO|II|PCE,MI|PCO				,RO|PCE			,MI			,RO|BI		,0			,0			}}; // ldb  
	if(code == 0x03) return {{MI|PCO,RO|II|PCE,MI|PCO				,RO|PCE			,MI			,RI|AO		,0			,0			}}; // sta  
	if(code == 0x04) return {{MI|PCO,RO|II|PCE,MI|PCO				,RO|PCE			,MI			,RI|BO		,0			,0			}}; // stb  
	if(code == 0x05) return {{MI|PCO,RO|II|PCE,AB|AD|EO|AI|FI		,0				,0			,0			,0			,0			}}; // addab
	if(code == 0x06) return {{MI|PCO,RO|II|PCE,AA|AD|EO|AI|FI		,0				,0			,0			,0			,0			}}; // addaa
	if(code == 0x07) return {{MI|PCO,RO|II|PCE,BB|AD|EO|BI|FI		,0				,0			,0			,0			,0			}}; // addbb
	if(code == 0x08) return {{MI|PCO,RO|II|PCE,BA|AD|EO|BI|FI		,0				,0			,0			,0			,0			}}; // addba
	if(code == 0x09) return {{MI|PCO,RO|II|PCE,AB|SU|EO|AI|FI		,0				,0			,0			,0			,0			}}; // subab
	if(code == 0x0a) return {{MI|PCO,RO|II|PCE,BA|SU|EO|BI|FI		,0				,0			,0			,0			,0			}}; // subba  
	if(code == 0x0b) return {{MI|PCO,RO|II|PCE,AB|MU|EO|AI|FI		,0				,0			,0			,0			,0			}}; // mulab
	if(code == 0x0c) return {{MI|PCO,RO|II|PCE,AA|MU|EO|AI|FI		,0				,0			,0			,0			,0			}}; // mulaa
	if(code == 0x0d) return {{MI|PCO,RO|II|PCE,BB|MU|EO|BI|FI		,0				,0			,0			,0			,0			}}; // mulbb
	if(code == 0x0e) return {{MI|PCO,RO|II|PCE,AB|DIV|EO|AI|FI		,0				,0			,0			,0			,0			}}; // divab  
	if(code == 0x0f) return {{MI|PCO,RO|II|PCE,BA|DIV|EO|BI|FI		,0				,0			,0			,0			,0			}}; // divba
	if(code == 0x10) return {{MI|PCO,RO|II|PCE,AA|NO|SH0|EO|AI|FI	,0				,0			,0			,0			,0			}}; // nota  
	if(code == 0x11) return {{MI|PCO,RO|II|PCE,BB|NO|SH0|EO|BI|FI	,0				,0			,0			,0			,0			}}; // notb  
	if(code == 0x12) return {{MI|PCO,RO|II|PCE,AB|AND|EO|AI|FI		,0				,0			,0			,0			,0			}}; // andab
	if(code == 0x13) return {{MI|PCO,RO|II|PCE,BA|AND|EO|BI|FI		,0				,0			,0			,0			,0			}}; // andba
	if(code == 0x14) return {{MI|PCO,RO|II|PCE,AB|OR|EO|AI|FI		,0				,0			,0			,0			,0			}}; // orab
	if(code == 0x15) return {{MI|PCO,RO|II|PCE,BA|OR|EO|BI|FI		,0				,0			,0			,0			,0			}}; // orba
	if(code == 0x16) return {{MI|PCO,RO|II|PCE,AB|XOR|EO|AI|FI		,0				,0			,0			,0			,0			}}; // xorab
	if(code == 0x17) return {{MI|PCO,RO|II|PCE,AA|XOR|EO|AI|FI		,0				,0			,0			,0			,0			}}; // xoraa
	if(code == 0x18) return {{MI|PCO,RO|II|PCE,BB|XOR|EO|BI|FI		,0				,0			,0			,0			,0			}}; // xorbb
	if(code == 0x19) return {{MI|PCO,RO|II|PCE,BA|XOR|EO|BI|FI		,0				,0			,0			,0			,0			}}; // xorba
	if(code == 0x1a) return {{MI|PCO,RO|II|PCE,AA|SHL|LG0|EO|AI|FI	,0				,0			,0			,0			,0			}}; // shla  
	if(code == 0x1b) return {{MI|PCO,RO|II|PCE,BB|SHL|LG0|EO|BI|FI	,0				,0			,0			,0			,0			}}; // shlb  
	if(code == 0x1c) return {{MI|PCO,RO|II|PCE,AA|SHR|LG0|EO|AI|FI	,0				,0			,0			,0			,0			}}; // shra  
	if(code == 0x1d) return {{MI|PCO,RO|II|PCE,BB|SHR|LG0|EO|BI|FI	,0				,0			,0			,0			,0			}}; // shrb  
	if(code == 0x1e) return {{MI|PCO,RO|II|PCE,AB|CMP|FI			,0				,0			,0			,0			,0			}}; // cmpab  
	if(code == 0x1f) return {{MI|PCO,RO|II|PCE,BA|CMP|FI			,0				,0			,0			,0			,0			}}; // cmpba  
	if(code == 0x20) return {{MI|PCO,RO|II|PCE,SPD|SPE				,SPO|MI			,AO|RI		,0			,0			,0			}}; // pusha  
	if(code == 0x21) return {{MI|PCO,RO|II|PCE,SPD|SPE				,SPO|MI			,BO|RI		,0			,0			,0			}}; // pushb  
	if(code == 0x22) return {{MI|PCO,RO|II|PCE,SPO|MI				,RO|AI|SPE		,0			,0			,0			,0			}}; // popa  
	if(code == 0x23) return {{MI|PCO,RO|II|PCE,SPO|MI				,RO|BI|SPE		,0			,0			,0			,0			}}; // popb  
	if(code == 0x24) return {{MI|PCO,RO|II|PCE,PCO|SPD|SPE			,SPO|MI|PCE		,PCO|RI		,MI			,RO|PCJ		,0			}}; // call  
	if(code == 0x25) return {{MI|PCO,RO|II|PCE,SPO|MI				,RO|PCJ			,SPE		,0			,0			,0			}}; // ret  
	if(code == 0x26) return {{MI|PCO,RO|II|PCE,PCO|MI				,RO|PCJ			,0			,0			,0			,0			}}; // jmp  
	if(code == 0x27) return {{MI|PCO,RO|II|PCE,0					,0				,PCE		,0			,0			,0			}}; // jz  
	if(code == 0x28) return {{MI|PCO,RO|II|PCE,0					,0				,PCE		,0			,0			,0			}}; // jac  
	if(code == 0x29) return {{MI|PCO,RO|II|PCE,0					,0				,PCE		,0			,0			,0			}}; // jsc  
	if(code == 0x2a) return {{MI|PCO,RO|II|PCE,0					,0				,PCE		,0			,0			,0			}}; // je  
	if(code == 0x2b) return {{MI|PCO,RO|II|PCE,0					,0				,PCE		,0			,0			,0			}}; // jn  
	if(code == 0x2c) return {{MI|PCO,RO|II|PCE,0					,0				,PCE		,0			,0			,0			}}; // jl  
	if(code == 0x2d) return {{MI|PCO,RO|II|PCE,0					,0				,PCE		,0			,0			,0			}}; // jg  
	if(code == 0x2e) return {{MI|PCO,RO|II|PCE,AO|OI				,0				,0			,0			,0			,0			}}; // outa
	if(code == 0x2f) return {{MI|PCO,RO|II|PCE,BO|OI				,0				,0			,0			,0			,0			}}; // outb
	if(code == 0x30) return {{MI|PCO,RO|II|PCE,HLT					,0				,0			,0			,0			,0			}}; // hlt  
	if(code == 0x31) return {{MI|PCO,RO|II|PCE,AO|BI				,0				,0			,0			,0			,0			}}; // mvab
	if(code == 0x32) return {{MI|PCO,RO|II|PCE,BO|AI				,0				,0			,0			,0			,0			}}; // mvba
	if(code == 0x33) return {{MI|PCO,RO|II|PCE,AO|IE				,CI				,0			,0			,0			,0			}}; // print
	if(code == 0x34) return {{MI|PCO,RO|II|PCE,0					,0				,0			,0			,0			,0			}}; // clean
	if(code == 0x35) return {{MI|PCO,RO|II|PCE,SP|CI				,0				,0			,0			,0			,0			}}; // print8
	if(code == 0x36) return {{MI|PCO,RO|II|PCE,AO|PCJ				,0				,0			,0			,0			,0			}}; // jmpa
	if(code == 0x37) return {{MI|PCO,RO|II|PCE,BO|PCJ				,0				,0			,0			,0			,0			}}; // jmpb
	if(code == 0x38) return {{MI|PCO,RO|II|PCE,PCO|AI				,0				,0			,0			,0			,0			}}; // laa
	if(code == 0x39) return {{MI|PCO,RO|II|PCE,PCO|BI				,0				,0			,0			,0			,0			}}; // lab
	if(code == 0x3a) return {{MI|PCO,RO|II|PCE,AA|LG1|EO|FI|AI		,0				,0			,0			,0			,0			}}; // ina
	if(code == 0x3b) return {{MI|PCO,RO|II|PCE,BB|LG1|EO|FI|BI		,0				,0			,0			,0			,0			}}; // inb
	if(code == 0x3c) return {{MI|PCO,RO|II|PCE,AA|LG1|SU|EO|FI|AI	,0				,0			,0			,0			,0			}}; // dea
	if(code == 0x3d) return {{MI|PCO,RO|II|PCE,BB|LG1|SU|EO|FI|BI	,0				,0			,0			,0			,0			}}; // deb
	if(code == 0x3e) return {{MI|PCO,RO|II|PCE,AO|MI				,RO|AI			,0			,0			,0			,0			}}; // ldaa
	if(code == 0x3f) return {{MI|PCO,RO|II|PCE,AO|MI				,RO|BI			,0			,0			,0			,0			}}; // ldab
	if(code == 0x40) return {{MI|PCO,RO|II|PCE,BO|MI				,RO|AI			,0			,0			,0			,0			}}; // ldba
	if(code == 0x41) return {{MI|PCO,RO|II|PCE,BO|MI				,RO|BI			,0			,0			,0			,0			}}; // ldbb
	if(code == 0x42) return {{MI|PCO,RO|II|PCE,AA|LG0|FI			,0				,0			,0			,0			,0			}}; // testa
	if(code == 0x43) return {{MI|PCO,RO|II|PCE,BB|LG0|FI			,0				,0			,0			,0			,0			}}; // testb
	if(code == 0x44) return {{MI|PCO,RO|II|PCE,PCO|MI				,RO|AI|PCE		,0			,0			,0			,0			}}; // ldva
	if(code == 0x45) return {{MI|PCO,RO|II|PCE,PCO|MI				,RO|BI|PCE		,0			,0			,0			,0			}}; // ldvb
	if(code == 0x46) return {{MI|PCO,RO|II|PCE,BA|MU|EO|BI|FI		,0				,0			,0			,0			,0			}}; // mulba
	if(code == 0x47) return {{MI|PCO,RO|II|PCE,BO|MI				,RI|AO			,0			,0			,0			,0			}}; // stab
	if(code == 0x48) return {{MI|PCO,RO|II|PCE,AO|MI				,RI|BO			,0			,0			,0			,0			}}; // stba
	if(code == 0x49) return {{MI|PCO,RO|II|PCE,SPO|AI				,0				,0			,0			,0			,0			}}; // mspa
	if(code == 0x4a) return {{MI|PCO,RO|II|PCE,SPO|BI				,0				,0			,0			,0			,0			}}; // mspb
	if(code == 0x4b) return {{MI|PCO,RO|II|PCE,SPE					,0				,0			,0			,0			,0			}}; // pop
	if(code == 0x4c) return {{MI|PCO,RO|II|PCE,AO|IE				,SP|AI			,0			,0			,0			,0			}}; // sh8a
	if(code == 0x4d) return {{MI|PCO,RO|II|PCE,BO|IE				,SP|BI			,0			,0			,0			,0			}}; // sh8b
	else             return {{0		,0		  ,0					,0				,0			,0			,0			,0			}};
}
Unicode_t getUnicode2(const unsigned char& code){
	if(code == 0x00) return {{0,0,0			,0			,0			,0			,0			,0			}}; // nop
	if(code == 0x01) return {{0,0,0			,DI			,DO			,0			,0			,0			}}; // lda  
	if(code == 0x02) return {{0,0,0			,DI			,DO			,0			,0			,0			}}; // ldb  
	if(code == 0x03) return {{0,0,0			,DI			,DO			,0			,0			,0			}}; // sta  
	if(code == 0x04) return {{0,0,0			,DI			,DO			,0			,0			,0			}}; // stb  
	if(code == 0x05) return {{0,0,0			,0			,0			,0			,0			,0			}}; // addab
	if(code == 0x06) return {{0,0,0			,0			,0			,0			,0			,0			}}; // addaa
	if(code == 0x07) return {{0,0,0			,0			,0			,0			,0			,0			}}; // addbb
	if(code == 0x08) return {{0,0,0			,0			,0			,0			,0			,0			}}; // addba
	if(code == 0x09) return {{0,0,0			,0			,0			,0			,0			,0			}}; // subab
	if(code == 0x0a) return {{0,0,0			,0			,0			,0			,0			,0			}}; // subba  
	if(code == 0x0b) return {{0,0,0			,0			,0			,0			,0			,0			}}; // mulab
	if(code == 0x0c) return {{0,0,0			,0			,0			,0			,0			,0			}}; // mulaa
	if(code == 0x0d) return {{0,0,0			,0			,0			,0			,0			,0			}}; // mulbb
	if(code == 0x0e) return {{0,0,0			,0			,0			,0			,0			,0			}}; // divab  
	if(code == 0x0f) return {{0,0,0			,0			,0			,0			,0			,0			}}; // divba
	if(code == 0x10) return {{0,0,0			,0			,0			,0			,0			,0			}}; // nota  
	if(code == 0x11) return {{0,0,0			,0			,0			,0			,0			,0			}}; // notb  
	if(code == 0x12) return {{0,0,0			,0			,0			,0			,0			,0			}}; // andab
	if(code == 0x13) return {{0,0,0			,0			,0			,0			,0			,0			}}; // andba
	if(code == 0x14) return {{0,0,0			,0			,0			,0			,0			,0			}}; // orab
	if(code == 0x15) return {{0,0,0			,0			,0			,0			,0			,0			}}; // orba
	if(code == 0x16) return {{0,0,0			,0			,0			,0			,0			,0			}}; // xorab
	if(code == 0x17) return {{0,0,0			,0			,0			,0			,0			,0			}}; // xoraa
	if(code == 0x18) return {{0,0,0			,0			,0			,0			,0			,0			}}; // xorbb
	if(code == 0x19) return {{0,0,0			,0			,0			,0			,0			,0			}}; // xorba
	if(code == 0x1a) return {{0,0,0			,0			,0			,0			,0			,0			}}; // shla  
	if(code == 0x1b) return {{0,0,0			,0			,0			,0			,0			,0			}}; // shlb  
	if(code == 0x1c) return {{0,0,0			,0			,0			,0			,0			,0			}}; // shra  
	if(code == 0x1d) return {{0,0,0			,0			,0			,0			,0			,0			}}; // shrb  
	if(code == 0x1e) return {{0,0,0			,0			,0			,0			,0			,0			}}; // cmpab  
	if(code == 0x1f) return {{0,0,0			,0			,0			,0			,0			,0			}}; // cmpba  
	if(code == 0x20) return {{0,0,0			,0			,0			,0			,0			,0			}}; // pusha  
	if(code == 0x21) return {{0,0,0			,0			,0			,0			,0			,0			}}; // pushb  
	if(code == 0x22) return {{0,0,0			,0			,0			,0			,0			,0			}}; // popa  
	if(code == 0x23) return {{0,0,0			,0			,0			,0			,0			,0			}}; // popb  
	if(code == 0x24) return {{0,0,DI		,0			,0			,DO			,0			,0			}}; // call  
	if(code == 0x25) return {{0,0,0			,0			,0			,0			,0			,0			}}; // ret  
	if(code == 0x26) return {{0,0,0			,0			,0			,0			,0			,0			}}; // jmp  
	if(code == 0x27) return {{0,0,0			,0			,0			,0			,0			,0			}}; // jz  
	if(code == 0x28) return {{0,0,0			,0			,0			,0			,0			,0			}}; // jac  
	if(code == 0x29) return {{0,0,0			,0			,0			,0			,0			,0			}}; // jsc  
	if(code == 0x2a) return {{0,0,0			,0			,0			,0			,0			,0			}}; // je  
	if(code == 0x2b) return {{0,0,0			,0			,0			,0			,0			,0			}}; // jn  
	if(code == 0x2c) return {{0,0,0			,0			,0			,0			,0			,0			}}; // jl  
	if(code == 0x2d) return {{0,0,0			,0			,0			,0			,0			,0			}}; // jg  
	if(code == 0x2e) return {{0,0,0			,0			,0			,0			,0			,0			}}; // outa
	if(code == 0x2f) return {{0,0,0			,0			,0			,0			,0			,0			}}; // outb
	if(code == 0x30) return {{0,0,0			,0			,0			,0			,0			,0			}}; // hlt  
	if(code == 0x31) return {{0,0,0			,0			,0			,0			,0			,0			}}; // mvab
	if(code == 0x32) return {{0,0,0			,0			,0			,0			,0			,0			}}; // mvba
	if(code == 0x33) return {{0,0,0			,0			,0			,0			,0			,0			}}; // print
	if(code == 0x34) return {{0,0,CC		,0			,0			,0			,0			,0			}}; // clean
	if(code == 0x35) return {{0,0,0			,0			,0			,0			,0			,0			}}; // print8
	if(code == 0x36) return {{0,0,0			,0			,0			,0			,0			,0			}}; // jmpa
	if(code == 0x37) return {{0,0,0			,0			,0			,0			,0			,0			}}; // jmpb
	if(code == 0x38) return {{0,0,0			,0			,0			,0			,0			,0			}}; // laa
	if(code == 0x39) return {{0,0,0			,0			,0			,0			,0			,0			}}; // lab
	if(code == 0x3a) return {{0,0,0			,0			,0			,0			,0			,0			}}; // ina
	if(code == 0x3b) return {{0,0,0			,0			,0			,0			,0			,0			}}; // inb
	if(code == 0x3c) return {{0,0,0			,0			,0			,0			,0			,0			}}; // dea
	if(code == 0x3d) return {{0,0,0			,0			,0			,0			,0			,0			}}; // deb
	if(code == 0x3e) return {{0,0,0			,0			,0			,0			,0			,0			}}; // ldaa
	if(code == 0x3f) return {{0,0,0			,0			,0			,0			,0			,0			}}; // ldab
	if(code == 0x40) return {{0,0,0			,0			,0			,0			,0			,0			}}; // ldba
	if(code == 0x41) return {{0,0,0			,0			,0			,0			,0			,0			}}; // ldbb
	if(code == 0x42) return {{0,0,0			,0			,0			,0			,0			,0			}}; // testa
	if(code == 0x43) return {{0,0,0			,0			,0			,0			,0			,0			}}; // testb
	if(code == 0x44) return {{0,0,0			,0			,0			,0			,0			,0			}}; // ldva
	if(code == 0x45) return {{0,0,0			,0			,0			,0			,0			,0			}}; // ldvb
	if(code == 0x46) return {{0,0,0			,0			,0			,0			,0			,0			}}; // mulba
	if(code == 0x47) return {{0,0,0			,0			,0			,0			,0			,0			}}; // stab
	if(code == 0x48) return {{0,0,0			,0			,0			,0			,0			,0			}}; // stba
	if(code == 0x49) return {{0,0,0			,0			,0			,0			,0			,0			}}; // mspa
	if(code == 0x4a) return {{0,0,0			,0			,0			,0			,0			,0			}}; // mspb
	if(code == 0x4b) return {{0,0,0			,0			,0			,0			,0			,0			}}; // pop
	if(code == 0x4c) return {{0,0,0			,CO			,0			,0			,0			,0			}}; // sh8a
	if(code == 0x4d) return {{0,0,0			,CO			,0			,0			,0			,0			}}; // sh8b
	else             return {{0,0,0			,0			,0			,0			,0			,0			}};
}